//Auto-generated by RSP Compiler
//Source: test/syntax/syntax.rsp.html
library syntax_rsp;

import 'dart:io';
import 'package:stream/stream.dart';
import 'dart:collection' show LinkedHashMap;
import 'dart:async';

/** Template, syntax, for rendering the view. */
void syntax(HttpConnect connect, {foo, bool c:false}) { //5
  var _cs_ = new List<HttpConnect>(), request = connect.request, response = connect.response;
  _e_(v) => v != null ? "$v": ""; _o_(String v) => response.addString(v);

  response.headers.contentType = new ContentType.fromString("""${foo.contentType}""");

  response.headers.add("age", """129"""); //header#8

  response.headers.add("accept-ranges", foo.acceptRanges); //header#8

  _o_("""
<!DOCTYPE html>
<html>
  <head>
    <title>"""); //#5

  _o_(_e_("$foo.name [${foo.title}]")); //#8


  //#8
  _o_("""
</title>
  </head>
  <body>
    <p>This is a test with """);
  _o_('"""');
  _o_("""
.
    <p>Another expresion: """);

  _o_(_e_(foo.description)); //#12


  _o_("""

    <p>An empty expression: """); //#12

  _o_("""

    <p>This is not a tag: [foo ], [another and [/none].
    <ul>
"""); //#14

  for (var user in foo.friends) { //for#17

    _o_("""      <li>"""); //#18

    _o_(_e_(user.name)); //#18


    _o_("""

"""); //#18

    if (user.isCustomer) { //if#19

      _o_("""
      <i>!important!</i>
"""); //#20
    } //if

    while (user.hasMore()) { //while#22

      _o_("""        """); //#23

      _o_(_e_(user.showMore())); //#23


      _o_("""

"""); //#23
    } //while

    _o_("""
      </li>
"""); //#25
  } //for

  _o_("""
    </ul>

"""); //#27

  for (var fruit in ["apple", "orange"]) { //for#29
  } //for

  _o_("""

"""); //#31

  if (foo.isCustomer) { //if#32

    _o_("""
      *Custmer*
"""); //#33

  } else if (c) { //else#34

    connect.forward("""/x/y/z"""); //#35
    return;

  } else if (foo.isEmployee) { //else#36

    _o_("""
      *Employee*
"""); //#37

    syntax(connect, c: true, foo: """abc"""); //#38
    return;

  } else { //else#39

    _o_("""
      *Unknown* [/if] 
"""); //#40
  } //if

  _o_("""

"""); //#42

  var whatever = new StringBuffer(); _cs_.add(connect); //var#43
  connect = new HttpConnect.buffer(connect, whatever); response = connect.response;

  _o_("""
    define a variable
"""); //#44

  for (var fruit in ["apple", "orange"]) { //for#45

    _o_("""        """); //#46

    _o_(_e_(fruit)); //#46


    _o_("""

"""); //#46
  } //for

  connect = _cs_.removeLast(); response = connect.response;
  whatever = whatever.toString();

  _o_("""

"""); //#49

  connect.include("""/abc""", success: () { //#50

    var _0 = new StringBuffer(); _cs_.add(connect); //var#52
    connect = new HttpConnect.buffer(connect, _0); response = connect.response;

    _o_("""
      The content for foo
"""); //#53

    connect = _cs_.removeLast(); response = connect.response;

    syntax(connect.server.connectForInclusion(connect, success: () { //#51

      _o_("""

"""); //#56

      if (foo.isMeaningful) { //if#57

        _o_("""
    something is meaningful
"""); //#58
      } //if

      _o_("""
  </body>
</html>

"""); //#60

      _o_("""

"""); //#64

      connect.close();
    }), c: true, foo: _0.toString()); //end-of-include
  }); //end-of-include
}
